<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'security.authentication.listener.form.contao_backend' shared service.

include_once $this->targetDirs[3].'\\vendor\\symfony\\security\\Http\\Firewall\\ListenerInterface.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\security\\Http\\Firewall\\AbstractAuthenticationListener.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\security\\Http\\Firewall\\UsernamePasswordFormAuthenticationListener.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\security\\Http\\Authentication\\AuthenticationSuccessHandlerInterface.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\security\\Http\\Authentication\\CustomAuthenticationSuccessHandler.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\security\\Http\\Authentication\\AuthenticationFailureHandlerInterface.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\security\\Http\\Authentication\\CustomAuthenticationFailureHandler.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\security\\Http\\Session\\SessionAuthenticationStrategyInterface.php';
include_once $this->targetDirs[3].'\\vendor\\symfony\\security\\Http\\Session\\SessionAuthenticationStrategy.php';

return $this->privates['security.authentication.listener.form.contao_backend'] = new \Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener(($this->services['security.token_storage'] ?? ($this->services['security.token_storage'] = new \Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage())), ($this->privates['security.authentication.manager'] ?? $this->load('getSecurity_Authentication_ManagerService.php')), ($this->privates['security.authentication.session_strategy'] ?? ($this->privates['security.authentication.session_strategy'] = new \Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy('migrate'))), ($this->privates['security.http_utils'] ?? $this->load('getSecurity_HttpUtilsService.php')), 'contao_backend', new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler(($this->privates['contao.security.authentication_success_handler'] ?? $this->load('getContao_Security_AuthenticationSuccessHandlerService.php')), ['login_path' => 'contao_backend_login', 'default_target_path' => 'contao_backend', 'always_use_default_target_path' => false], 'contao_backend'), new \Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler(($this->privates['contao.security.authentication_failure_handler'] ?? $this->load('getContao_Security_AuthenticationFailureHandlerService.php')), ['login_path' => 'contao_backend_login', 'failure_path' => NULL, 'failure_forward' => false]), ['check_path' => 'contao_backend_login', 'use_forward' => false, 'require_previous_session' => false, 'csrf_parameter' => '_csrf_token', 'csrf_token_id' => 'authenticate', 'post_only' => true, 'lock_period' => 300, 'login_attempts' => 3, 'username_parameter' => 'username', 'password_parameter' => 'password'], ($this->privates['monolog.logger.security'] ?? $this->load('getMonolog_Logger_SecurityService.php')), ($this->services['event_dispatcher'] ?? $this->getEventDispatcherService()), NULL);
